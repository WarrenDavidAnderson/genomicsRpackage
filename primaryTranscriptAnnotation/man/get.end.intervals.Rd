% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gene_ann.R
\name{get.end.intervals}
\alias{get.end.intervals}
\title{Get intervals at the gene ends for transcription termination site (TTS) estimation}
\usage{
get.end.intervals(bed = NULL, add.to.end = NULL, fraction.end = NULL,
  dist.from.start = NULL)
}
\arguments{
\item{bed}{processed bed6 file with one entry per gene and identified TSSs}

\item{add.to.end}{number of bases to add to the end of each gene to define the search region}

\item{fraction.end}{fraction of the gene annotation to consider at the end of the gene}

\item{dist.from.start}{the maximal allowable distance between the end of one gene and the start of the next}
}
\value{
A bed6 for gene end evaluation
}
\description{
We define regions at the gene ends to examine read counts for TTS identification.
Note that transcription frequently extends beyond the poly-A site of a gene. To capture the end of
transcription, it is critical to examine regions beyond annotated gene boundries. We
evaluate evidence of transcriptional termination in regions extending from a 3â€™ subset of the gene
to a selected number of base pairs downstream of the most distal annotated gene end. We initiate
the search region with the end of the largest gene annotation (see get.largest.interval()).
We extend the search region up to a given distance past the annotated gene end. We also apply the constraint that a
TTS cannot be identified closer than a specified distance to the previously identified TSS of a downstream gene.
This analysis also incorporates the constraint that a gene end region identified
cannot cross the TSS of a downstream gene, thereby preventing gene overlaps on a given strand.
Thus, we clip the amount of bases added on to the gene end as necessary to avoid overlaps.
}
\examples{
# get intervals for TTS evaluation
add.to.end = 100000
fraction.end=0.1
dist.from.start=50
bed.for.tts.eval = get.end.intervals(bed=bed.long.filtered4.tss,
                                 add.to.end=add.to.end,
                                 fraction.end=fraction.end,
                                 dist.from.start=dist.from.start)
}
